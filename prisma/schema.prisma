// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String         @id @default(uuid())
  name             String
  email            String         @unique
  password_hash    String
  role             UserRole
  phone_number     String?
  profile_picture  String?
  created_at       DateTime       @default(now())
  updated_at       DateTime       @updatedAt
  saved_properties  Property[]     @relation("saved_properties")  
  // For Agents
  is_verified      Boolean        @default(false)
  verification_docs Json?          // Changed to JSON
  properties       Property[]     @relation("user_properties") // properties this user owns (agent)
  // Subscription     Subscription?  @relation(fields: [subscriptionId], references: [id])
  // subscriptionId   String?
}


model Property {
  id             String    @id @default(uuid())
  agent       User?      @relation("user_properties", fields: [agentId], references: [id])  
  agentId        String?
  title          String
  description    String
  bedrooms       String
  bathrooms      String
  toilets        String
  size_sqm       Float
  price          Float
  discount_percent Float?
  discounted_price Float?
  property_type  PropertyType
  listing_type   ListingType
  furnishing     Furnishing
  status         PropertyStatus
  amenities      String[]
  date_added     DateTime @default(now())
  date_modified  DateTime @updatedAt
  images         String[]
  street    String
  city      String
  state     String
  parking_spaces  String?
 saved_by     User[]    @relation("saved_properties")
  approval_status    ApprovalStatus @default(pending)
  approval_notes String?

//  For Rentals
  availability   String?
  tenancy_info String?
  service_charge String?
  min_tenancy String?
  deposit Float?

}


// model Subscription {
//   id          String     @id @default(uuid())
//   agent       User       @relation
//   tier        SubscriptionTier
//   is_active   Boolean    @default(true)
//   start_date  DateTime   @default(now())
//   end_date    DateTime
//   renewed_at  DateTime?
//   created_at  DateTime   @default(now())
// }

enum UserRole {
  buyer
  agent
  admin
}

enum PropertyType {
  apartment
  detached
  semi_detached
  terrace
  land
}

enum ListingType {
  sale
  rent
  shortlet
}

enum Furnishing {
  furnished
  unfurnished
  partly_furnished
}

enum PropertyStatus {
  available
  sold
  rented
  unavailable
}

enum SubscriptionTier {
  basic
  premium
  enterprise
}
enum ApprovalStatus {
  approved
  pending
  rejected
}


